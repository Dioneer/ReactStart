{"version":3,"file":"static/js/38.04db6dc4.chunk.js","mappings":"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","sources":["components/canvas/canvas.js","components/todo/addTodo.js"],"sourcesContent":["import React, { useEffect, useContext } from \"react\";\r\nimport './canvas.css';\r\nimport classnames from \"classnames\";\r\nimport Context from '../context.js';\r\n\r\nfunction Canvas() {\r\n\tconst { changeImages } = useContext(Context);\r\n\tlet [classes, setClasses] = React.useState('');\r\n\tconst canvasRef = React.useRef(null);\r\n\tconst contextRef = React.useRef(null);\r\n\tlet [drawing, setDrawing] = React.useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst canvas = canvasRef.current;\r\n\t\tlet rect = canvas.getBoundingClientRect();\r\n\t\tconst context = canvas.getContext('2d');\r\n\t\tcontextRef.current = context;\r\n\r\n\t\tcanvas.width = rect.width;\r\n\t\tcanvas.height = 50;\r\n\r\n\t\tcontext.scale(1, 1);\r\n\t\tcontext.lineCap = 'round'\r\n\t\tcontext.strokeStyle = '#333'\r\n\t\tcontext.lineWidth = 1\r\n\r\n\t\tconst onClick = (e) => {\r\n\t\t\tif (!canvas) return;\r\n\t\t\tif (!canvas.contains(e.target)) {\r\n\t\t\t\tcanvas.height = 50;\r\n\t\t\t\tsetClasses(classes = '')\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdocument.addEventListener('click', onClick);\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener('click', onClick);\r\n\t\t}\r\n\r\n\t}, [])\r\n\r\n\tconst startDrawing = (e) => {\r\n\t\tcanvasRef.current.height = 100;\r\n\t\tsetClasses(classes = 'active')\r\n\t\tlet rect = e.target.getBoundingClientRect();\r\n\t\tclearCanvas(rect.width, rect.height);\r\n\t\tconst { offsetX, offsetY } = e.nativeEvent;\r\n\t\tif (offsetX && offsetY) {\r\n\t\t\tcontextRef.current.beginPath();\r\n\t\t\tcontextRef.current.moveTo(offsetX, offsetY);\r\n\t\t\tcontextRef.current.lineTo(offsetX, offsetY);\r\n\t\t\tcontextRef.current.stroke();\r\n\t\t\tsetDrawing(drawing = true);\r\n\t\t} else {\r\n\t\t\tlet touchX = e.targetTouches[0].pageX - rect.left;\r\n\t\t\tlet touchY = e.targetTouches[0].pageY - rect.top;\r\n\t\t\tcontextRef.current.beginPath();\r\n\t\t\tcontextRef.current.moveTo(touchX, touchY);\r\n\t\t\tsetDrawing(drawing = true);\r\n\t\t\tcontextRef.current.lineTo(touchX, touchY);\r\n\t\t\tcontextRef.current.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\tconst clearCanvas = (width, height) => {\r\n\t\tcontextRef.current.clearRect(0, 0, width, height)\r\n\t}\r\n\r\n\tconst finishDrawing = (e) => {\r\n\t\tcontextRef.current.closePath();\r\n\t\tsetDrawing(drawing = false);\r\n\t}\r\n\r\n\tconst onMouseMove = (e) => {\r\n\t\tif (drawing) {\r\n\t\t\tconst { offsetX, offsetY } = e.nativeEvent;\r\n\t\t\tif (offsetX && offsetY) {\r\n\t\t\t\tcontextRef.current.lineTo(offsetX, offsetY);\r\n\t\t\t\tcontextRef.current.stroke();\r\n\t\t\t} else {\r\n\t\t\t\tlet rect = e.target.getBoundingClientRect();\r\n\t\t\t\tlet touchX = e.targetTouches[0].pageX - rect.left;\r\n\t\t\t\tlet touchY = e.targetTouches[0].pageY - rect.top;\r\n\t\t\t\tcontextRef.current.lineTo(touchX, touchY);\r\n\t\t\t\tcontextRef.current.stroke();\r\n\t\t\t}\r\n\t\t} else return\r\n\t}\r\n\r\n\tconst saveImageToLocal = (event) => {\r\n\t\tconst id = new Date();\r\n\t\tlet link = event.currentTarget;\r\n\t\tlink.setAttribute('download', id);\r\n\t\tlet image = canvasRef.current.toDataURL('image/png');\r\n\t\tlink.setAttribute('href', image);\r\n\t\tchangeImages(image)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<canvas\r\n\t\t\t\tclassName={classnames('canvas', { active: classes })}\r\n\t\t\t\tonMouseDown={startDrawing}\r\n\t\t\t\tonMouseUp={finishDrawing}\r\n\t\t\t\tonMouseMove={onMouseMove}\r\n\t\t\t\tonTouchStart={startDrawing}\r\n\t\t\t\tonTouchEnd={finishDrawing}\r\n\t\t\t\tonMouseLeave={finishDrawing}\r\n\t\t\t\tonTouchMove={onMouseMove}\r\n\t\t\t\tref={canvasRef}>\r\n\t\t\t</canvas>\r\n\t\t\t<button\r\n\t\t\t\tclassName='button button__big'\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tonClick={saveImageToLocal}>\r\n\t\t\t\t<span>Send</span>\r\n\t\t\t</button>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default Canvas;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Canvas from '../canvas/canvas.js';\r\nimport classnames from \"classnames\";\r\n\r\nfunction AddToDo({ onCreate }) {\r\n\tlet [dataValue, setDataValue] = React.useState('');\r\n\tlet [value, setValue] = React.useState('Add Todo');\r\n\tlet [classes, setClasses] = React.useState([]);\r\n\r\n\tfunction submitHandler(e) {\r\n\t\te.preventDefault();\r\n\t\tif (dataValue.trim()) {\r\n\t\t\tonCreate(dataValue);\r\n\t\t\tsetValue(value = 'Add Todo');\r\n\t\t\tsetDataValue(dataValue = '');\r\n\t\t}\r\n\t}\r\n\r\n\tfunction focus() {\r\n\t\tclasses.push('active');\r\n\t\tsetValue(value = '');\r\n\t}\r\n\r\n\tfunction blur() {\r\n\t\tsetValue(value = 'Add Todo');\r\n\t\tsetClasses(classes = [])\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tclassName='form form__addToDo'\r\n\t\t\taction=\"#\"\r\n\t\t\tmethod=\"POST\"\r\n\t\t\tonSubmit={submitHandler}>\r\n\t\t\t<div className='form__addText canvas__prim'>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tdata-value={dataValue}\r\n\t\t\t\t\tvalue={value || ''}\r\n\t\t\t\t\tdata-error=\"ошибка\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tclassName={classnames(\"input\", { active: classes[0] })}\r\n\t\t\t\t\tonFocus={() => focus()}\r\n\t\t\t\t\tonBlur={() => blur()}\r\n\t\t\t\t\tonChange={(e) => { setValue(e.target.value); setDataValue(e.target.value) }} />\r\n\r\n\t\t\t\t<button className='button button__big' type=\"submit\" >\r\n\t\t\t\t\t<span>Send</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName='form__addText canvas__add'>\r\n\t\t\t\t<Canvas />\r\n\t\t\t</div>\r\n\t\t</form >\r\n\t)\r\n}\r\n\r\nAddToDo.propTypes = {\r\n\tonCreate: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddToDo;"],"names":["changeImages","useContext","Context","_React$useState","React","_React$useState2","_slicedToArray","classes","setClasses","canvasRef","contextRef","_React$useState3","_React$useState4","drawing","setDrawing","useEffect","canvas","current","rect","getBoundingClientRect","context","getContext","width","height","scale","lineCap","strokeStyle","lineWidth","onClick","e","contains","target","document","addEventListener","removeEventListener","startDrawing","clearCanvas","_e$nativeEvent","nativeEvent","offsetX","offsetY","beginPath","moveTo","lineTo","stroke","touchX","targetTouches","pageX","left","touchY","pageY","top","clearRect","finishDrawing","closePath","onMouseMove","_e$nativeEvent2","_jsxs","children","_jsx","className","classnames","active","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onMouseLeave","onTouchMove","ref","type","event","id","Date","link","currentTarget","setAttribute","image","toDataURL","_ref","onCreate","dataValue","setDataValue","value","setValue","_React$useState5","_React$useState6","action","method","onSubmit","preventDefault","trim","autoComplete","name","onFocus","push","onBlur","onChange","Canvas"],"sourceRoot":""}